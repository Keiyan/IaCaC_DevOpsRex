---

ldap:
  username: '#{inventory.ldap.username}#'
  password: '#{inventory.ldap.password}#'
saml:
  OKTA:
    certificate: '#{inventory.saml.OKTA.certificate}#'
    entity: '#{inventory.saml.OKTA.entity}#'
    url: '#{inventory.saml.OKTA.url}#'
environment_name: '#{inventory.environment_name}#'
release_name: #{Build.BuildNumber}#
credentials:
  Azure:
    subscription: '#{inventory.credentials.Azure.subscription}#'
    tenant: "#{inventory.credentials.Azure.tenant}#"
    application_id: "#{inventory.credentials.Azure.application_id}#"
    application_secret: "#{inventory.credentials.Azure.application_secret}#"
gogs:
  uri: '#{inventory.gogs.uri}#'
  port: #{inventory.gogs.port}#
  user: '#{inventory.gogs.user}#'
  password: '#{inventory.gogs.password}#'
  source_branch: #{Build.SourceBranch}#
  source_branch_name: #{Build.SourceBranchName}#
  sources:
    infra_templates: https://#{inventory.vsts.PAT}#@dev.azure.com/organisation/project/_git/Templates
awx:
  uri: '#{inventory.awx.uri}#'
  user: '#{inventory.awx.user}#'
  password: "#{inventory.awx.password}#"
  version: "#{inventory.awx.version}#"
postgres:
  user: '#{inventory.postgres.user}#'
  password: '#{inventory.postgres.password}#'
  replication:
    user: '#{inventory.postgres.replication.user}#'
    password: '#{inventory.postgres.replication.password}#'
compose:
  path: '/c/awx/awxcompose/'
kubernetes:
  target: rancher
  namespace: giac-#{inventory.helm.environment_name}#
  service_dns_suffix: #{inventory.kubernetes.service_dns_suffix}#
  proxy: #{inventory.kubernetes.proxy}#
  environment: #{inventory.helm.environment_name}#
  cluster:
    name: #{inventory.kubernetes.cluster.name}#
    url: https://cluster.url/k8s/clusters/#{inventory.kubernetes.cluster.code}#
    certificate: #{inventory.kubernetes.cluster.certificate}#
    user: #{inventory.kubernetes.cluster.username}#
    token: #{inventory.kubernetes.cluster.usertoken}#
  replicas:
    awx_web: #{inventory.kubernetes.replicas.awx_web}#
    awx_task: #{inventory.kubernetes.replicas.awx_task}#
    rabbitmq: #{inventory.kubernetes.replicas.rabbitmq}#
    postgres: #{inventory.kubernetes.replicas.postgres}#
  host:
    awx: #{inventory.kubernetes.host.awx}#
    portal: #{inventory.kubernetes.host.portal}#
ansible:
  version: #{inventory.ansible.version}#
virtualenv:
  path: #{inventory.virtualenv.path}#
  name: #{inventory.virtualenv.name}#
control:
  enable_ephemeral_cleaning: #{enable.ephemeral.cleaning}#
  keep_admin_account: false
  setup_awx: true
  test_awx: #{run.tests}#
deployment_type: k8s
validate_certs: #{inventory.validate_certs}#