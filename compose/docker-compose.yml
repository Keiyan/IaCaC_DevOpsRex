version: '2'
services:

  gogs:
    image: gogs/gogs
    container_name: awx_gogs
    ports:
      - "3000:3000"
      - "10022:22"
    hostname: awx_gogs
    user: root
    restart: unless-stopped
    volumes:
      - "awx_gogs:/data"

  web:
    image: ansible/awx_web
    container_name: awx_web
    depends_on:
      - rabbitmq
      - memcached
      - postgres
      - gogs
    ports:
      - "80:8052"
    hostname: awxweb
    user: root
    restart: unless-stopped
    volumes:
      - "./SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./environment.sh:/etc/tower/conf.d/environment.sh"
      - "./credentials.py:/etc/tower/conf.d/credentials.py"
    environment:
      http_proxy: 
      https_proxy: 
      no_proxy: 

  task1:
    image: ansible/awx_task
    container_name: awx_task1
    depends_on:
      - rabbitmq
      - memcached
      - web
      - postgres
    hostname: awx1
    user: root
    restart: unless-stopped
    volumes:
      - "./SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./environment.sh:/etc/tower/conf.d/environment.sh"
      - "./credentials.py:/etc/tower/conf.d/credentials.py"
      - "./task-entrypoint.sh:/usr/bin/task-entrypoint.sh"
    environment:
      http_proxy: 
      https_proxy: 
      no_proxy: 
      TASK_NAME: "awx1"
      SLEEP_TIME: 0
    entrypoint: /usr/bin/task-entrypoint.sh

  task2:
    image: ansible/awx_task
    container_name: awx_task2
    depends_on:
      - rabbitmq
      - memcached
      - web
      - postgres
      - task1
    hostname: awx2
    user: root
    restart: unless-stopped
    volumes:
      - "./SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./environment.sh:/etc/tower/conf.d/environment.sh"
      - "./credentials.py:/etc/tower/conf.d/credentials.py"
      - "./task-entrypoint.sh:/usr/bin/task-entrypoint.sh"
    environment:
      http_proxy: 
      https_proxy: 
      no_proxy: 
      TASK_NAME: "awx2"
      SLEEP_TIME: 300
    entrypoint: /usr/bin/task-entrypoint.sh

  rabbitmq:
    image: ansible/awx_rabbitmq
    container_name: awx_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_VHOST: "awx"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "awxpass"
      RABBITMQ_ERLANG_COOKIE: cookiemonster
    ports:
      - 15672:15672
      - 5672:5672

#  rabbitmq1:
#    image: rabbitmq:management
#    hostname: rabbitmq1
#    container_name: awx_rabbitmq1
#    restart: unless-stopped
#    environment:
#      RABBITMQ_DEFAULT_VHOST: "awx"
#      RABBITMQ_DEFAULT_USER: "guest"
#      RABBITMQ_DEFAULT_PASS: "awxpass"
#      RABBITMQ_ERLANG_COOKIE: cookiemonster
#
#  rabbitmq2:
#    image: rabbitmq:management
#    hostname: rabbitmq2
#    container_name: awx_rabbitmq2
#    restart: unless-stopped
#    depends_on:
#      - rabbitmq1
#    environment:
#      RABBITMQ_ERLANG_COOKIE: cookiemonster
#    volumes:
#      - "./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh"
#    entrypoint: /usr/local/bin/cluster-entrypoint.sh
#
#  rabbitmq3:
#    image: rabbitmq:management
#    hostname: rabbitmq3
#    container_name: awx_rabbitmq3
#    restart: unless-stopped
#    depends_on:
#      - rabbitmq1
#    environment:
#      RABBITMQ_ERLANG_COOKIE: cookiemonster
#    volumes:
#      - "./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh"
#    entrypoint: /usr/local/bin/cluster-entrypoint.sh
#    
#  rabbitmq:
#    image: haproxy
#    container_name: awx_rabbitmq
#    hostname: rabbitmq
#    restart: unless-stopped
#    volumes:
#      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
#    depends_on:
#      - rabbitmq1
#      - rabbitmq2
#      - rabbitmq3
#    ports:
#      - 15672:15672
#      - 5672:5672

  memcached:
    image: memcached:alpine
    container_name: awx_memcached
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: awx_postgres
    restart: unless-stopped
    volumes:
      - awx_postgres:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_USER: awx
      POSTGRES_PASSWORD: awxpass
      POSTGRES_DB: awx
      PGDATA: /var/lib/postgresql/data/pgdata

volumes:
    awx_postgres:
    awx_gogs: